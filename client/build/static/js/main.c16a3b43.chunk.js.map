{"version":3,"sources":["components/Dropdown.js","components/Form.js","App.js","index.js"],"names":["Dropdown","label","selected","options","onSelectedChange","generatedList","map","option","value","onChange","className","aria-label","areasLogged","machinesInArea","Form","props","handleMaintenanceActivity","event","setState","activity","target","handleAreaSelection","currentArea","handleMachineSelection","currentMachine","handleDateChange","selectedDate","handleTimeChange","selectedTime","state","maintenanceActivity","moment","format","timeStep","this","onFormMount","console","log","machinesList","htmlFor","id","type","step","placeholder","style","height","React","Component","App","error","fetchMachines","a","axios","get","response","serverError","data","renderForm","ReactDOM","render","document","querySelector"],"mappings":"wNA0BeA,EAxBE,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBACtCC,EAAgBF,EAAQG,KAAI,SAACC,GACjC,OACE,wBAA2BC,MAAOD,EAAOC,MAAzC,SACGD,EAAON,OADGM,EAAOC,UAMxB,OACE,gCACE,gCAAQP,IACR,wBACEO,MAAON,EAASM,MAChBC,SAAUL,EACVM,UAAU,cACVC,aAAW,yBAJb,SAMGN,Q,iBChBHO,EAAc,CAClB,CACEX,MAAO,aACPO,MAAO,cAET,CACEP,MAAO,UACPO,MAAO,YAGLK,EAAiB,CACrB,CACEZ,MAAO,SACPO,MAAO,UAET,CACEP,MAAO,UACPO,MAAO,YA0GIM,E,kDAhGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAcRC,0BAA4B,SAACC,GAC3B,EAAKC,SAAS,CAAEC,SAAUF,EAAMG,OAAOZ,SAhBtB,EAkBnBa,oBAAsB,SAACJ,GACrB,EAAKC,SAAS,CAAEI,YAAaL,EAAMG,OAAOZ,SAnBzB,EAqBnBe,uBAAyB,SAACN,GACxB,EAAKC,SAAS,CAAEM,eAAgBP,EAAMG,OAAOZ,SAtB5B,EAwBnBiB,iBAAmB,SAACR,GAClB,EAAKC,SAAS,CAAEQ,aAAcT,EAAMG,OAAOZ,SAzB1B,EA2BnBmB,iBAAmB,SAACV,GAClB,EAAKC,SAAS,CAAEU,aAAcX,EAAMG,OAAOZ,SA1B3C,EAAKqB,MAAQ,CACXC,oBAAqB,GACrBR,YAAaV,EAAY,GACzBY,eAAgBX,EAAe,GAC/Ba,aAZGK,MAASC,OAAO,cAanBJ,aAAc,GACdK,SAAU,MARK,E,0LAYXC,KAAKnB,MAAMoB,c,OACjBD,KAAKhB,SAAS,CAAEe,SAAU,Q,qIAoB1B,OADAG,QAAQC,IAAIH,KAAKnB,MAAMuB,cAErB,+BACE,sBAAK5B,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CACET,MAAM,iBACNC,SAAUgC,KAAKL,MAAMP,YACrBnB,QAASS,EACTR,iBAAkB8B,KAAKb,wBAG3B,qBAAKX,UAAU,WAAf,SACE,cAAC,EAAD,CACET,MAAM,mBACNC,SAAUgC,KAAKL,MAAML,eACrBrB,QAASU,EACTT,iBAAkB8B,KAAKX,2BAG3B,sBAAKb,UAAU,WAAf,UACE,uBAAO6B,QAAQ,aAAa7B,UAAU,aAAtC,6BAGA,uBACEA,UAAU,eACV8B,GAAG,aACHC,KAAK,OACLjC,MAAO0B,KAAKL,MAAMH,aAClBjB,SAAUyB,KAAKT,sBAGnB,sBAAKf,UAAU,WAAf,UACE,uBAAO6B,QAAQ,aAAa7B,UAAU,aAAtC,6BAGA,uBACEA,UAAU,eACV8B,GAAG,aACHC,KAAK,OACLC,KAAMR,KAAKL,MAAMI,SACjBzB,MAAO0B,KAAKL,MAAMD,aAClBnB,SAAUyB,KAAKP,sBAGnB,sBAAKjB,UAAU,SAAf,UACE,uBAAO6B,QAAQ,wBAAwB7B,UAAU,aAAjD,oCAGA,0BACE8B,GAAG,wBACH9B,UAAU,eACViC,YAAY,iBACZC,MAAO,CAAEC,OAAQ,SACjBrC,MAAO0B,KAAKL,MAAMC,oBAClBrB,SAAUyB,KAAKlB,wC,GAxFV8B,IAAMC,WCIVC,E,4MA7BbnB,MAAQ,CAAEoB,OAAO,EAAOX,aAAc,M,EACtCY,c,sBAAgB,4BAAAC,EAAA,+EAEWC,IAAMC,IAAI,0BAFrB,OAENC,EAFM,OAGZ,EAAKpC,SAAS,CACZ+B,MAAOK,EAASC,YAChBjB,aAAcgB,EAASE,OALb,gDAQZ,EAAKtC,SAAS,CAAE+B,OAAO,IARX,yD,2DAad,OAAIf,KAAKL,MAAMoB,MACN,QAGP,cAAC,EAAD,CACEd,YAAaD,KAAKgB,cAClBZ,aAAcJ,KAAKL,MAAMS,iB,+BAK7B,OAAO,qBAAK5B,UAAU,YAAf,SAA4BwB,KAAKuB,mB,GA1B1BX,IAAMC,WCAxBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.c16a3b43.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Dropdown = ({ label, selected, options, onSelectedChange }) => {\r\n  const generatedList = options.map((option) => {\r\n    return (\r\n      <option key={option.value} value={option.value}>\r\n        {option.label}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <label>{label}</label>\r\n      <select\r\n        value={selected.value}\r\n        onChange={onSelectedChange}\r\n        className=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n      >\r\n        {generatedList}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport moment from \"moment\";\r\n\r\nconst areasLogged = [\r\n  {\r\n    label: \"Production\",\r\n    value: \"Production\",\r\n  },\r\n  {\r\n    label: \"Packing\",\r\n    value: \"Packing\",\r\n  },\r\n];\r\nconst machinesInArea = [\r\n  {\r\n    label: \"Hugart\",\r\n    value: \"Hugart\",\r\n  },\r\n  {\r\n    label: \"Novapac\",\r\n    value: \"Novapac\",\r\n  },\r\n];\r\nconst getFormattedDate = () => {\r\n  return moment().format(\"YYYY-MM-DD\");\r\n};\r\nconst getFormattedTime = () => {\r\n  return moment().format(\"LTS\");\r\n};\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      maintenanceActivity: \"\",\r\n      currentArea: areasLogged[0],\r\n      currentMachine: machinesInArea[0],\r\n      selectedDate: getFormattedDate(),\r\n      selectedTime: \"\",\r\n      timeStep: null,\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.onFormMount();\r\n    this.setState({ timeStep: \"900\" });\r\n  }\r\n  handleMaintenanceActivity = (event) => {\r\n    this.setState({ activity: event.target.value });\r\n  };\r\n  handleAreaSelection = (event) => {\r\n    this.setState({ currentArea: event.target.value });\r\n  };\r\n  handleMachineSelection = (event) => {\r\n    this.setState({ currentMachine: event.target.value });\r\n  };\r\n  handleDateChange = (event) => {\r\n    this.setState({ selectedDate: event.target.value });\r\n  };\r\n  handleTimeChange = (event) => {\r\n    this.setState({ selectedTime: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.machinesList);\r\n    return (\r\n      <form>\r\n        <div className=\"row g-5\">\r\n          <div className=\"col-md-6\">\r\n            <Dropdown\r\n              label=\"Select an area\"\r\n              selected={this.state.currentArea}\r\n              options={areasLogged}\r\n              onSelectedChange={this.handleAreaSelection}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <Dropdown\r\n              label=\"Select a machine\"\r\n              selected={this.state.currentMachine}\r\n              options={machinesInArea}\r\n              onSelectedChange={this.handleMachineSelection}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"datePicker\" className=\"form-label\">\r\n              Select the date\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"datePicker\"\r\n              type=\"date\"\r\n              value={this.state.selectedDate}\r\n              onChange={this.handleDateChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"timePicker\" className=\"form-label\">\r\n              Select the time\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"timePicker\"\r\n              type=\"time\"\r\n              step={this.state.timeStep}\r\n              value={this.state.selectedTime}\r\n              onChange={this.handleTimeChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"maintenanceActivities\" className=\"form-label\">\r\n              Maintenance Activities\r\n            </label>\r\n            <textarea\r\n              id=\"maintenanceActivities\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter activity\"\r\n              style={{ height: \"200px\" }}\r\n              value={this.state.maintenanceActivity}\r\n              onChange={this.handleMaintenanceActivity}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"./components/Form\";\r\n\r\nclass App extends React.Component {\r\n  state = { error: false, machinesList: null };\r\n  fetchMachines = async () => {\r\n    try {\r\n      const response = await axios.get(\"/activity-log/machines\");\r\n      this.setState({\r\n        error: response.serverError,\r\n        machinesList: response.data,\r\n      });\r\n    } catch (err) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  renderForm() {\r\n    if (this.state.error) {\r\n      return \"Error\";\r\n    }\r\n    return (\r\n      <Form\r\n        onFormMount={this.fetchMachines}\r\n        machinesList={this.state.machinesList}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return <div className=\"container\">{this.renderForm()}</div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}