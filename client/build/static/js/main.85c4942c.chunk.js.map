{"version":3,"sources":["components/Dropdown.js","components/Form.js","App.js","index.js"],"names":["Dropdown","label","selected","options","onSelectedChange","generatedList","length","map","option","console","log","value","onChange","className","aria-label","Form","props","getAreasFromList","machinesList","areas","Set","item","machine_location","forEach","value1","value2","set","push","getMachinesFromList","filter","state","currentArea","machine_name","handleChange","event","stateProperty","setState","target","maintenanceActivity","currentMachine","selectedDate","moment","format","selectedTime","timeStep","this","onFormMount","htmlFor","id","type","step","placeholder","style","height","React","Component","App","error","fetchAreaAndMachines","a","axios","get","response","data","serverError","renderForm","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.85c4942c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Dropdown = ({ label, selected, options, onSelectedChange }) => {\r\n  const generatedList =\r\n    options.length > 0\r\n      ? options.map((option) => {\r\n          console.log(option);\r\n          return (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          );\r\n        })\r\n      : null;\r\n\r\n  return (\r\n    <div>\r\n      <label>{label}</label>\r\n      <select\r\n        value={selected.value}\r\n        onChange={onSelectedChange}\r\n        className=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n      >\r\n        {generatedList}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport moment from \"moment\";\r\n\r\nconst getFormattedDate = () => {\r\n  return moment().format(\"YYYY-MM-DD\");\r\n};\r\nconst getFormattedTime = () => {\r\n  return moment().format(\"LTS\");\r\n};\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      maintenanceActivity: \"\",\r\n      currentArea: \"\",\r\n      currentMachine: \"\",\r\n      selectedDate: getFormattedDate(),\r\n      selectedTime: \"\",\r\n      timeStep: null,\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.onFormMount();\r\n    this.setState({ timeStep: \"900\" });\r\n  }\r\n\r\n  getAreasFromList = () => {\r\n    if (!this.props.machinesList) {\r\n      return [];\r\n    }\r\n    let areas = [];\r\n    [\r\n      ...new Set(this.props.machinesList.map((item) => item.machine_location)),\r\n    ].forEach((value1, value2, set) => {\r\n      areas.push({ label: value1, value: value1 });\r\n    });\r\n    // if (!this.state.currentArea) {\r\n    //   this.setState({ currentArea: array[0] });\r\n    // }\r\n    return areas;\r\n  };\r\n\r\n  getMachinesFromList = () => {\r\n    if (!this.props.machinesList) {\r\n      return [];\r\n    }\r\n    return this.props.machinesList\r\n      .filter((item) => item.machine_location == this.state.currentArea)\r\n      .map(({ machine_name }) => {\r\n        return { label: machine_name, value: machine_name };\r\n      });\r\n  };\r\n\r\n  handleChange = (event, stateProperty) => {\r\n    this.setState({ [stateProperty]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.machinesList);\r\n    return (\r\n      <form>\r\n        <div className=\"row g-5\">\r\n          <div className=\"col-md-6\">\r\n            <Dropdown\r\n              label=\"Select an area\"\r\n              selected={this.state.currentArea}\r\n              options={this.getAreasFromList()}\r\n              onSelectedChange={(event) => {\r\n                this.handleChange(event, \"currentArea\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <Dropdown\r\n              label=\"Select a machine\"\r\n              selected={this.state.currentMachine}\r\n              options={this.getMachinesFromList()}\r\n              onSelectedChange={(event) => {\r\n                this.handleChange(event, \"currentMachine\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"datePicker\" className=\"form-label\">\r\n              Select the date\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"datePicker\"\r\n              type=\"date\"\r\n              value={this.state.selectedDate}\r\n              onChange={(event) => {\r\n                this.handleChange(event, \"selectedDate\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"timePicker\" className=\"form-label\">\r\n              Select the time\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"timePicker\"\r\n              type=\"time\"\r\n              step={this.state.timeStep}\r\n              value={this.state.selectedTime}\r\n              onChange={(event) => {\r\n                this.handleChange(event, \"selectedTime\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"maintenanceActivities\" className=\"form-label\">\r\n              Maintenance Activities\r\n            </label>\r\n            <textarea\r\n              id=\"maintenanceActivities\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter activity\"\r\n              style={{ height: \"200px\" }}\r\n              value={this.state.maintenanceActivity}\r\n              onChange={(event) => {\r\n                this.handleChange(event, \"maintenanceActivity\");\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"./components/Form\";\r\n\r\nclass App extends React.Component {\r\n  state = { error: false, machinesList: null };\r\n  fetchAreaAndMachines = async () => {\r\n    try {\r\n      const response = await axios.get(\"/activity-log/area-and-machines\");\r\n      this.setState({\r\n        error: response.data.serverError,\r\n        machinesList: response.data.data,\r\n      });\r\n    } catch (err) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  renderForm() {\r\n    if (this.state.error) {\r\n      return \"Error\";\r\n    }\r\n    return (\r\n      <Form\r\n        onFormMount={this.fetchAreaAndMachines}\r\n        machinesList={this.state.machinesList}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return <div className=\"container\">{this.renderForm()}</div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}