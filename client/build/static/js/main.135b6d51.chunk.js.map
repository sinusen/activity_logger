{"version":3,"sources":["components/Dropdown.js","components/Form.js","App.js","index.js"],"names":["Dropdown","label","selected","options","onSelectedChange","generatedList","length","map","option","value","onChange","className","aria-label","Form","props","areas","machines","getAreasFromList","machinesList","Set","item","machine_location","forEach","value1","value2","set","push","setState","currentArea","getMachinesFromList","area","filter","machine_name","currentMachine","handleAreaChange","event","stateProperty","target","handleChange","state","maintenanceActivity","selectedDate","moment","format","selectedTime","timeStep","this","onFormMount","prevProps","htmlFor","id","type","step","placeholder","style","height","React","Component","App","error","fetchAreaAndMachines","a","axios","get","response","data","serverError","renderForm","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.135b6d51.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Dropdown = ({ label, selected, options, onSelectedChange }) => {\r\n  const generatedList =\r\n    options.length > 0\r\n      ? options.map((option) => {\r\n          return (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          );\r\n        })\r\n      : null;\r\n\r\n  return (\r\n    <div>\r\n      <label>{label}</label>\r\n      <select\r\n        value={selected.value}\r\n        onChange={onSelectedChange}\r\n        className=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n      >\r\n        {generatedList}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport moment from \"moment\";\r\n\r\nconst getFormattedDate = () => {\r\n  return moment().format(\"YYYY-MM-DD\");\r\n};\r\nconst getFormattedTime = () => {\r\n  return moment().format(\"LTS\");\r\n};\r\nclass Form extends React.Component {\r\n  areas = [];\r\n  machines = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      maintenanceActivity: \"\",\r\n      currentArea: \"\",\r\n      currentMachine: \"\",\r\n      selectedDate: getFormattedDate(),\r\n      selectedTime: \"\",\r\n      timeStep: null,\r\n    };\r\n  }\r\n\r\n  getAreasFromList = () => {\r\n    if (!this.props.machinesList) {\r\n      this.areas = [];\r\n      return;\r\n    }\r\n    let areas = [];\r\n    [\r\n      ...new Set(this.props.machinesList.map((item) => item.machine_location)),\r\n    ].forEach((value1, value2, set) => {\r\n      areas.push({ label: value1, value: value1 });\r\n    });\r\n    this.areas = areas;\r\n    this.setState({ currentArea: this.areas[0] });\r\n  };\r\n\r\n  getMachinesFromList = (area) => {\r\n    if (!this.props.machinesList) {\r\n      this.machines = [];\r\n      return;\r\n    }\r\n    this.machines = this.props.machinesList\r\n      .filter((item) => item.machine_location == area)\r\n      .map(({ machine_name }) => {\r\n        return { label: machine_name, value: machine_name };\r\n      });\r\n    this.setState({ currentMachine: this.machines[0] });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.onFormMount();\r\n    this.setState({ timeStep: \"900\" });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.machinesList != prevProps.machinesList &&\r\n      this.props.machinesList\r\n    ) {\r\n      this.getAreasFromList();\r\n      this.getMachinesFromList(this.areas[0].value);\r\n    }\r\n  }\r\n\r\n  handleAreaChange = (event, stateProperty) => {\r\n    this.setState({ [stateProperty]: event.target.value });\r\n    this.getMachinesFromList(event.target.value);\r\n  };\r\n  handleChange = (event, stateProperty) => {\r\n    this.setState({ [stateProperty]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <div className=\"row g-5\">\r\n          <div className=\"col-md-6\">\r\n            <Dropdown\r\n              label=\"Select an area\"\r\n              selected={this.state.currentArea}\r\n              options={this.areas}\r\n              onSelectedChange={(event) => {\r\n                this.handleAreaChange(event, \"currentArea\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <Dropdown\r\n              label=\"Select a machine\"\r\n              selected={this.state.currentMachine}\r\n              options={this.machines}\r\n              onSelectedChange={(event) => {\r\n                this.handleChange(event, \"currentMachine\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"datePicker\" className=\"form-label\">\r\n              Select the date\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"datePicker\"\r\n              type=\"date\"\r\n              value={this.state.selectedDate}\r\n              onChange={(event) => {\r\n                this.handleChange(event, \"selectedDate\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label htmlFor=\"timePicker\" className=\"form-label\">\r\n              Select the time\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"timePicker\"\r\n              type=\"time\"\r\n              step={this.state.timeStep}\r\n              value={this.state.selectedTime}\r\n              onChange={(event) => {\r\n                this.handleChange(event, \"selectedTime\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"maintenanceActivities\" className=\"form-label\">\r\n              Maintenance Activities\r\n            </label>\r\n            <textarea\r\n              id=\"maintenanceActivities\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter activity\"\r\n              style={{ height: \"200px\" }}\r\n              value={this.state.maintenanceActivity}\r\n              onChange={(event) => {\r\n                this.handleChange(event, \"maintenanceActivity\");\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"./components/Form\";\r\n\r\nclass App extends React.Component {\r\n  state = { error: false, machinesList: null };\r\n  fetchAreaAndMachines = async () => {\r\n    try {\r\n      const response = await axios.get(\"/activity-log/area-and-machines\");\r\n      this.setState({\r\n        error: response.data.serverError,\r\n        machinesList: response.data.data,\r\n      });\r\n    } catch (err) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  renderForm() {\r\n    if (this.state.error) {\r\n      return \"Error\";\r\n    }\r\n    return (\r\n      <Form\r\n        onFormMount={this.fetchAreaAndMachines}\r\n        machinesList={this.state.machinesList}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return <div className=\"container\">{this.renderForm()}</div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}